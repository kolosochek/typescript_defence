{"ast":null,"code":"import { mapParams } from \"../maps/Level1\";\nclass Enemy {\n  constructor(context) {\n    let isMoving = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let animationFrameId = arguments.length > 2 ? arguments[2] : undefined;\n    let randomOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      x: Math.floor(Math.random() * 8),\n      y: Math.floor(Math.random() * 8)\n    };\n    let currentPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      x: 0,\n      y: 0\n    };\n    let enemyParams = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      width: 10,\n      height: 10\n    };\n    this.context = context;\n    this.isMoving = isMoving;\n    this.animationFrameId = animationFrameId;\n    this.randomOffset = randomOffset;\n    this.currentPosition = currentPosition;\n    this.enemyParams = enemyParams;\n  }\n  drawEnemy() {\n    // set initial coords of enemy\n    this.currentPosition.x = mapParams.startX + this.randomOffset.x;\n    this.currentPosition.y = mapParams.startY + this.randomOffset.y;\n\n    // draw a 2d representation\n    this.context.beginPath();\n    this.context.rect(this.currentPosition.x, this.currentPosition.y, this.enemyParams.width, this.enemyParams.height);\n    this.context.strokeStyle = 'red';\n    this.context.stroke();\n    this.context.closePath();\n  }\n  move(timestamp) {\n    if (this.isMoving) {}\n    this.animationFrameId = requestAnimationFrame(tick => this.move(timestamp));\n    // change me to proper tick value\n    const tick = timestamp;\n    this.currentPosition.x += tick;\n\n    // debug\n    console.log(tick);\n    console.log(`tick`);\n    //\n\n    this.context.clearRect(this.currentPosition.x, this.currentPosition.y, this.enemyParams.width, this.enemyParams.height);\n    this.context.beginPath();\n    this.context.rect(this.currentPosition.x + tick, this.currentPosition.y, this.enemyParams.width, this.enemyParams.height);\n    this.context.strokeStyle = 'red';\n    this.context.stroke();\n    this.context.closePath();\n  }\n  stop() {\n    cancelAnimationFrame(this.animationFrameId);\n  }\n}\nexport default Enemy;","map":{"version":3,"names":["mapParams","Enemy","constructor","context","isMoving","animationFrameId","randomOffset","x","Math","floor","random","y","currentPosition","enemyParams","width","height","drawEnemy","startX","startY","beginPath","rect","strokeStyle","stroke","closePath","move","timestamp","requestAnimationFrame","tick","console","log","clearRect","stop","cancelAnimationFrame"],"sources":["/data/towerDefence/client/src/enemies/Enemy.ts"],"sourcesContent":["import {mapParams} from \"../maps/Level1\";\n\nclass Enemy {\n    constructor(\n        public context:CanvasRenderingContext2D,\n        public isMoving: boolean = false,\n        public animationFrameId:number,\n        public randomOffset = {\n            x: Math.floor(Math.random() * 8),\n            y: Math.floor(Math.random() * 8),\n        },\n        public currentPosition = {\n            x: 0,\n            y: 0,\n        },\n        public enemyParams = {\n            width: 10,\n            height: 10\n        },\n        ) {\n    }\n\n    public drawEnemy() {\n        // set initial coords of enemy\n        this.currentPosition.x = mapParams.startX + this.randomOffset.x\n        this.currentPosition.y = mapParams.startY + this.randomOffset.y\n\n        // draw a 2d representation\n        this.context.beginPath()\n        this.context.rect( this.currentPosition.x , this.currentPosition.y, this.enemyParams.width, this.enemyParams.height )\n        this.context.strokeStyle = 'red'\n        this.context.stroke()\n        this.context.closePath()\n    }\n\n    public move(timestamp:any) {\n        if (this.isMoving) {\n\n        }\n        this.animationFrameId = requestAnimationFrame((tick) => this.move(timestamp))\n        // change me to proper tick value\n        const tick = timestamp\n\n        this.currentPosition.x += tick\n\n        // debug\n        console.log(tick)\n        console.log(`tick`)\n        //\n\n        this.context.clearRect(this.currentPosition.x, this.currentPosition.y, this.enemyParams.width, this.enemyParams.height)\n        this.context.beginPath()\n        this.context.rect( this.currentPosition.x + tick , this.currentPosition.y, this.enemyParams.width, this.enemyParams.height )\n        this.context.strokeStyle = 'red'\n        this.context.stroke()\n        this.context.closePath()\n    }\n\n    public stop() {\n        cancelAnimationFrame(this.animationFrameId)\n    }\n}\n\nexport default Enemy;"],"mappings":"AAAA,SAAQA,SAAS,QAAO,gBAAgB;AAExC,MAAMC,KAAK,CAAC;EACRC,WAAW,CACAC,OAAgC,EAerC;IAAA,IAdKC,QAAiB,uEAAG,KAAK;IAAA,IACzBC,gBAAuB;IAAA,IACvBC,YAAY,uEAAG;MAClBC,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;MAChCC,CAAC,EAAEH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC;IACnC,CAAC;IAAA,IACME,eAAe,uEAAG;MACrBL,CAAC,EAAE,CAAC;MACJI,CAAC,EAAE;IACP,CAAC;IAAA,IACME,WAAW,uEAAG;MACjBC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ,CAAC;IAAA,KAdMZ,OAAgC,GAAhCA,OAAgC;IAAA,KAChCC,QAAiB,GAAjBA,QAAiB;IAAA,KACjBC,gBAAuB,GAAvBA,gBAAuB;IAAA,KACvBC,YAAY,GAAZA,YAAY;IAAA,KAIZM,eAAe,GAAfA,eAAe;IAAA,KAIfC,WAAW,GAAXA,WAAW;EAKtB;EAEOG,SAAS,GAAG;IACf;IACA,IAAI,CAACJ,eAAe,CAACL,CAAC,GAAGP,SAAS,CAACiB,MAAM,GAAG,IAAI,CAACX,YAAY,CAACC,CAAC;IAC/D,IAAI,CAACK,eAAe,CAACD,CAAC,GAAGX,SAAS,CAACkB,MAAM,GAAG,IAAI,CAACZ,YAAY,CAACK,CAAC;;IAE/D;IACA,IAAI,CAACR,OAAO,CAACgB,SAAS,EAAE;IACxB,IAAI,CAAChB,OAAO,CAACiB,IAAI,CAAE,IAAI,CAACR,eAAe,CAACL,CAAC,EAAG,IAAI,CAACK,eAAe,CAACD,CAAC,EAAE,IAAI,CAACE,WAAW,CAACC,KAAK,EAAE,IAAI,CAACD,WAAW,CAACE,MAAM,CAAE;IACrH,IAAI,CAACZ,OAAO,CAACkB,WAAW,GAAG,KAAK;IAChC,IAAI,CAAClB,OAAO,CAACmB,MAAM,EAAE;IACrB,IAAI,CAACnB,OAAO,CAACoB,SAAS,EAAE;EAC5B;EAEOC,IAAI,CAACC,SAAa,EAAE;IACvB,IAAI,IAAI,CAACrB,QAAQ,EAAE,CAEnB;IACA,IAAI,CAACC,gBAAgB,GAAGqB,qBAAqB,CAAEC,IAAI,IAAK,IAAI,CAACH,IAAI,CAACC,SAAS,CAAC,CAAC;IAC7E;IACA,MAAME,IAAI,GAAGF,SAAS;IAEtB,IAAI,CAACb,eAAe,CAACL,CAAC,IAAIoB,IAAI;;IAE9B;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAAE,MAAK,CAAC;IACnB;;IAEA,IAAI,CAAC1B,OAAO,CAAC2B,SAAS,CAAC,IAAI,CAAClB,eAAe,CAACL,CAAC,EAAE,IAAI,CAACK,eAAe,CAACD,CAAC,EAAE,IAAI,CAACE,WAAW,CAACC,KAAK,EAAE,IAAI,CAACD,WAAW,CAACE,MAAM,CAAC;IACvH,IAAI,CAACZ,OAAO,CAACgB,SAAS,EAAE;IACxB,IAAI,CAAChB,OAAO,CAACiB,IAAI,CAAE,IAAI,CAACR,eAAe,CAACL,CAAC,GAAGoB,IAAI,EAAG,IAAI,CAACf,eAAe,CAACD,CAAC,EAAE,IAAI,CAACE,WAAW,CAACC,KAAK,EAAE,IAAI,CAACD,WAAW,CAACE,MAAM,CAAE;IAC5H,IAAI,CAACZ,OAAO,CAACkB,WAAW,GAAG,KAAK;IAChC,IAAI,CAAClB,OAAO,CAACmB,MAAM,EAAE;IACrB,IAAI,CAACnB,OAAO,CAACoB,SAAS,EAAE;EAC5B;EAEOQ,IAAI,GAAG;IACVC,oBAAoB,CAAC,IAAI,CAAC3B,gBAAgB,CAAC;EAC/C;AACJ;AAEA,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}